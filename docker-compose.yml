version: "3.9"

services:
  bdio-app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./bdio_backend:/bdio_backend
      - dev-static-data:/vol/web
    command: >
      sh -c "python manage.py wait_for_db && python manage.py makemigrations && python manage.py migrate && python manage.py move_media && gunicorn bdio_backend.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - "8000"
    depends_on:
      - bdio-db
      - redis
      - daphne
    env_file:
      - ./.env
  nginx:
    image: nginx:stable
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./bdio_backend:/bdio_backend
      - ./nginx:/etc/nginx/conf.d
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dev-static-data:/vol/web
    depends_on:
      - bdio-app
    env_file:
      - ./.env

  certbot:
    image: certbot/certbot
    volumes:
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email "$EMAIL" --agree-tos --no-eff-email --staging -d "$DOMAIN" -d "www.$DOMAIN"
    env_file:
      - ./.env

  daphne:
    build:
      context: .
    command: >
      daphne --bind 0.0.0.0 -p 8001 bdio_backend.asgi:application
    ports:
      - "8001:8001"
    env_file:
      - ./.env

  bdio-db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - "5432:5432"

  redis:
    image: "redis:7"
    ports:
      - "6379:6379"

volumes:
  postgres_data:
  dev-static-data:
  certbot-etc:
  certbot-var:
  web-root:
